#include<iostream>
using namespace std;
class node
{ public:
int data;
node *next;
};
class linklist
{
public:
node *head=NULL;
	void append()
	{ int n;
	//cout<<"enter no. of nodes: ";
	cin>>n;
	for(int i=0;i<n;i++)
	{
		node *temp;
		temp=new node;
		temp->next=NULL;
		//cout<<"enter data: ";
		cin>>temp->data;
		if(head==NULL)
			{
			head=temp;
			}
		else
		{
			node *p=head;
			while(p->next!=NULL)
			{ p=p->next;
			}
			p->next=temp;
		}
	}
}
   	void display()
    { node *p;
    p=head;
    while(p!=NULL)
    { cout<<p->data<<" ";
    p=p->next;
	}
	cout<<endl;
	}
};

void disp(node *p)
{
while(p!=NULL)
{ cout<<p->data<<" ";
p=p->next;
}
cout<<endl;
}

int main()
{
int t;
cin>>t;
for(int z=0;z<t;z++){
linklist l1,l2;
l1.append();
l2.append();

node *head1 = l1.head;
node *head2 = l2.head;

node *temp;
if(head1==NULL)
l2.display();
else if(head2==NULL)
l1.display();
else{
        node *temp1=head1;
        node *temp2=head2;
        node* temp;
        node* head;
        if(temp1->data>=temp2->data){
            head=head2;
            temp=head;
            temp2=temp2->next;
        }
        else if(temp1->data<temp2->data){
            head=head1;
            temp=head;
            temp1=temp1->next;
        }
        while(temp1 != NULL && temp2 != NULL){
            if(temp1->data>temp2->data){
                temp->next=temp2;
                temp2=temp2->next;
                temp=temp->next;
            }
            else if(temp1->data<=temp2->data){
                temp->next=temp1;
                temp1=temp1->next;
                temp=temp->next;
            }
        }
        if(temp1!=NULL){
            temp->next=temp1;
        }
        else if(temp2!=NULL){
            temp->next=temp2;
        }
        disp(head);
}


// l1.display();
// l2.display();
}
}
